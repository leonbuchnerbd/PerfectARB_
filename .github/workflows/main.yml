name: Build and Release

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
        node-version: [20.9.0]

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}

    - name: Install dependencies
      run: npm install
    
    - name: Make package
      run: npm run package

    - name: Build Electron App
      run: npm run make
      env:
        DISPLAY: :99.0
        ELECTRON_CACHE: ${{ runner.temp }}/electron
        ELECTRON_BUILDER_CACHE: ${{ runner.temp }}/electron-builder

    - name: Upload Artifacts
      if: always()
      uses: actions/upload-artifact@v2
      with:
        name: electron-app
        path: out/make/

  release:
    runs-on: ubuntu-latest
    needs: build
    steps:
    - name: Download artifact from build job
      uses: actions/download-artifact@v2
      with:
        name: electron-app
        path: out/make/

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false

    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: out/make/
        asset_name: my-electron-app
        asset_content_type: application/zip
